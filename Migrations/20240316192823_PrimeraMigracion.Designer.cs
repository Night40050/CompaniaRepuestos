// <auto-generated />
using System;
using CompaniaRepuestos.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CompaniaRepuestos.Migrations
{
    [DbContext(typeof(CompaniaRepuestosContext))]
    [Migration("20240316192823_PrimeraMigracion")]
    partial class PrimeraMigracion
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CompaniaRepuestos.Models.Producto", b =>
                {
                    b.Property<int>("idProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idProducto"));

                    b.Property<int>("cantidadProducto")
                        .HasColumnType("int");

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("modelo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double>("valorVenta")
                        .HasColumnType("float");

                    b.HasKey("idProducto");

                    b.ToTable("Producto");
                });

            modelBuilder.Entity("CompaniaRepuestos.Models.Proveedor", b =>
                {
                    b.Property<int>("idProveedor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idProveedor"));

                    b.Property<string>("correo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("direccion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("nombreProveedor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("telefono")
                        .HasColumnType("int");

                    b.HasKey("idProveedor");

                    b.ToTable("Proveedor");
                });

            modelBuilder.Entity("CompaniaRepuestos.Models.RegistroAuditoria", b =>
                {
                    b.Property<int>("idAuditoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idAuditoria"));

                    b.Property<int?>("UsuarioidUsuario")
                        .HasColumnType("int");

                    b.Property<string>("accionRealizada")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("fechaAccion")
                        .HasColumnType("datetime2");

                    b.Property<int>("idUsuario")
                        .HasColumnType("int");

                    b.HasKey("idAuditoria");

                    b.HasIndex("UsuarioidUsuario");

                    b.ToTable("RegistroAuditoria");
                });

            modelBuilder.Entity("CompaniaRepuestos.Models.RelacionProducProv", b =>
                {
                    b.Property<int>("idRelacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idRelacion"));

                    b.Property<int>("idProducto")
                        .HasColumnType("int");

                    b.Property<int>("idProveedor")
                        .HasColumnType("int");

                    b.Property<double>("precioUnitario")
                        .HasColumnType("float");

                    b.HasKey("idRelacion");

                    b.HasIndex("idProducto");

                    b.HasIndex("idProveedor");

                    b.ToTable("RelacionProducProv");
                });

            modelBuilder.Entity("CompaniaRepuestos.Models.Rol", b =>
                {
                    b.Property<int>("idRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idRol"));

                    b.Property<string>("nombreRol")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("idRol");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("CompaniaRepuestos.Models.Usuario", b =>
                {
                    b.Property<int>("idUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idUsuario"));

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RolidRol")
                        .HasColumnType("int");

                    b.Property<string>("contraseña")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<int>("idRol")
                        .HasColumnType("int");

                    b.Property<string>("nombreUsuario")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("idUsuario");

                    b.HasIndex("RolidRol");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("CompaniaRepuestos.Models.Venta", b =>
                {
                    b.Property<int>("idVenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idVenta"));

                    b.Property<int?>("UsuarioidUsuario")
                        .HasColumnType("int");

                    b.Property<int>("cantidadVendida")
                        .HasColumnType("int");

                    b.Property<DateTime>("fechaVenta")
                        .HasColumnType("datetime2");

                    b.Property<int>("idProducto")
                        .HasColumnType("int");

                    b.Property<int>("idUsuario")
                        .HasColumnType("int");

                    b.Property<double>("totalVenta")
                        .HasColumnType("float");

                    b.HasKey("idVenta");

                    b.HasIndex("UsuarioidUsuario");

                    b.HasIndex("idProducto");

                    b.ToTable("Venta");
                });

            modelBuilder.Entity("CompaniaRepuestos.Models.RegistroAuditoria", b =>
                {
                    b.HasOne("CompaniaRepuestos.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioidUsuario");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("CompaniaRepuestos.Models.RelacionProducProv", b =>
                {
                    b.HasOne("CompaniaRepuestos.Models.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("idProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CompaniaRepuestos.Models.Proveedor", "Proveedor")
                        .WithMany()
                        .HasForeignKey("idProveedor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");

                    b.Navigation("Proveedor");
                });

            modelBuilder.Entity("CompaniaRepuestos.Models.Usuario", b =>
                {
                    b.HasOne("CompaniaRepuestos.Models.Rol", "Rol")
                        .WithMany()
                        .HasForeignKey("RolidRol");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("CompaniaRepuestos.Models.Venta", b =>
                {
                    b.HasOne("CompaniaRepuestos.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioidUsuario");

                    b.HasOne("CompaniaRepuestos.Models.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("idProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");

                    b.Navigation("Usuario");
                });
#pragma warning restore 612, 618
        }
    }
}
